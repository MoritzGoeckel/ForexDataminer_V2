<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 12.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="12.0">
 <Targets>
  <Target Name="E:\Programmieren\Libs\accord-framework\Release\net45\Accord.Math.dll">
   <Modules>
    <Module Name="accord.math.dll">
     <Namespaces>
      <Namespace Name="Accord.Math">
       <Types>
        <Type Name="ContinuousHistogram" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Range" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Name="SameType" Certainty="95" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\AForge" File="ContinuousHistogram.cs" Line="72">The property name 'ContinuousHistogram.Range' is confusing given the existence of method 'ContinuousHistogram.GetRange(float)'. Rename or remove one of these members.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FourierTransform" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DFT(System.Numerics.Complex[],Accord.Math.FourierTransform+Direction)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DFT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\AForge" File="FourierTransform.cs" Line="53">Correct the casing of 'DFT' in member name 'FourierTransform.DFT(Complex[], FourierTransform.Direction)' by changing it to 'Dft'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DFT2(System.Numerics.Complex[,],Accord.Math.FourierTransform+Direction)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DFT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\AForge" File="FourierTransform.cs" Line="100">Correct the casing of 'DFT' in member name 'FourierTransform.DFT2(Complex[,], FourierTransform.Direction)' by changing it to 'Dft'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FFT(System.Numerics.Complex[],Accord.Math.FourierTransform+Direction)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FFT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\AForge" File="FourierTransform.cs" Line="193">Correct the casing of 'FFT' in member name 'FourierTransform.FFT(Complex[], FourierTransform.Direction)' by changing it to 'Fft'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FFT2(System.Numerics.Complex[,],Accord.Math.FourierTransform+Direction)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FFT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\AForge" File="FourierTransform.cs" Line="250">Correct the casing of 'FFT' in member name 'FourierTransform.FFT2(Complex[,], FourierTransform.Direction)' by changing it to 'Fft'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetReversedBits(System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Name="NoArguments" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\AForge" File="FourierTransform.cs" Line="308">Call the 'ArgumentOutOfRangeException' constructor that contains a message and/or paramName parameter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FourierTransform+Direction" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
           <Issue Name="NotFlagsNoZeroValue" Certainty="95" Level="CriticalError">Add a member to 'FourierTransform.Direction' that has a value of zero with a suggested name of 'None'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Indices" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#From`2(!!1[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math" File="Indices.cs" Line="249">On method 'Indices.From&lt;T, U&gt;(U[])', prefix generic type parameter name 'U' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Matrix" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="Warning">'Matrix' is coupled with 82 different types from 13 different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above 95 indicates poor maintainability, a class coupling between 95 and 80 indicates moderate maintainability, and a class coupling below 80 indicates good maintainability.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Submatrix`1(!!0[],System.Int32[],System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Matrix" File="Matrix.Submatrix.cs" Line="488">Method 'Matrix.Submatrix&lt;T&gt;(this T[], int[], bool)' passes 'Source and indexes arrays must have the same dimension for in-place operations.' as the 'paramName' argument to a 'DimensionMismatchException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Matrix3x3" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="x" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'x' in type name 'Matrix3x3' by changing it to 'X'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SVD(Accord.Math.Matrix3x3&amp;,Accord.Math.Vector3&amp;,Accord.Math.Matrix3x3&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SVD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\AForge" File="Matrix3x3.cs" Line="859">Correct the casing of 'SVD' in member name 'Matrix3x3.SVD(out Matrix3x3, out Vector3, out Matrix3x3)' by changing it to 'Svd'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V00" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix3x3.V00' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V01" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix3x3.V01' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V02" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix3x3.V02' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V10" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix3x3.V10' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V11" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix3x3.V11' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V12" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix3x3.V12' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V20" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix3x3.V20' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V21" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix3x3.V21' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V22" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix3x3.V22' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Matrix4x4" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="x" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'x' in type name 'Matrix4x4' by changing it to 'X'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CreateFromColumns(Accord.Math.Vector4,Accord.Math.Vector4,Accord.Math.Vector4,Accord.Math.Vector4)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ReplaceRepetitiveArgumentsWithParamsArray" Category="Microsoft.Design" CheckId="CA1025" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\AForge" File="Matrix4x4.cs" Line="455">Consider implementing a version of 'Matrix4x4.CreateFromColumns(Vector4, Vector4, Vector4, Vector4)' that accepts a parameter array argument.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateFromRows(Accord.Math.Vector4,Accord.Math.Vector4,Accord.Math.Vector4,Accord.Math.Vector4)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ReplaceRepetitiveArgumentsWithParamsArray" Category="Microsoft.Design" CheckId="CA1025" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Certainty="50" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\AForge" File="Matrix4x4.cs" Line="417">Consider implementing a version of 'Matrix4x4.CreateFromRows(Vector4, Vector4, Vector4, Vector4)' that accepts a parameter array argument.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreatePerspective(System.Single,System.Single,System.Single,System.Single)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\AForge" File="Matrix4x4.cs" Line="384">Method 'Matrix4x4.CreatePerspective(float, float, float, float)' passes 'nearPlaneDistance ' as the 'paramName' argument to a 'ArgumentOutOfRangeException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V00" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix4x4.V00' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V01" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix4x4.V01' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V02" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix4x4.V02' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V03" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix4x4.V03' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V10" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix4x4.V10' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V11" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix4x4.V11' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V12" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix4x4.V12' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V13" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix4x4.V13' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V20" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix4x4.V20' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V21" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix4x4.V21' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V22" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix4x4.V22' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V23" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix4x4.V23' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V30" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix4x4.V30' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V31" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix4x4.V31' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V32" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix4x4.V32' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#V33" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Matrix4x4.V33' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="svd" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#svdcmp(System.Double[,],System.Double[]&amp;,System.Double[,]&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="svdcmp" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\AForge" File="SVD.cs" Line="301">Correct the spelling of the unrecognized token 'svdcmp' in the literal '"No convergence in 30 svdcmp iterations"'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Vector" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Range(System.Byte[],System.Byte&amp;,System.Byte&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="148">Method 'Vector.Range(this byte[], out byte, out byte)' passes parameter name 'values' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="148">Method 'Vector.Range(this byte[], out byte, out byte)' passes 'The values array is empty.' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Range(System.Decimal[],System.Decimal&amp;,System.Decimal&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="223">Method 'Vector.Range(this decimal[], out decimal, out decimal)' passes parameter name 'values' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="223">Method 'Vector.Range(this decimal[], out decimal, out decimal)' passes 'The values array is empty.' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Range(System.Double[],System.Double&amp;,System.Double&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="98">Method 'Vector.Range(this double[], out double, out double)' passes parameter name 'values' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="98">Method 'Vector.Range(this double[], out double, out double)' passes 'The values array is empty.' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Range(System.Int16[],System.Int16&amp;,System.Int16&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="123">Method 'Vector.Range(this short[], out short, out short)' passes parameter name 'values' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="123">Method 'Vector.Range(this short[], out short, out short)' passes 'The values array is empty.' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Range(System.Int32[],System.Int32&amp;,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="48">Method 'Vector.Range(this int[], out int, out int)' passes parameter name 'values' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="48">Method 'Vector.Range(this int[], out int, out int)' passes 'The values array is empty.' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Range(System.Int64[],System.Int64&amp;,System.Int64&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="198">Method 'Vector.Range(this long[], out long, out long)' passes parameter name 'values' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="198">Method 'Vector.Range(this long[], out long, out long)' passes 'The values array is empty.' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Range(System.SByte[],System.SByte&amp;,System.SByte&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="173">Method 'Vector.Range(this sbyte[], out sbyte, out sbyte)' passes parameter name 'values' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="173">Method 'Vector.Range(this sbyte[], out sbyte, out sbyte)' passes 'The values array is empty.' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Range(System.Single[],System.Single&amp;,System.Single&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="73">Method 'Vector.Range(this float[], out float, out float)' passes parameter name 'values' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="73">Method 'Vector.Range(this float[], out float, out float)' passes 'The values array is empty.' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Range(System.UInt16[],System.UInt16&amp;,System.UInt16&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="273">Method 'Vector.Range(this ushort[], out ushort, out ushort)' passes parameter name 'values' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="273">Method 'Vector.Range(this ushort[], out ushort, out ushort)' passes 'The values array is empty.' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Range(System.UInt64[],System.UInt64&amp;,System.UInt64&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="248">Method 'Vector.Range(this ulong[], out ulong, out ulong)' passes parameter name 'values' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Vector" File="Vector.Range.cs" Line="248">Method 'Vector.Range(this ulong[], out ulong, out ulong)' passes 'The values array is empty.' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Vector3" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#X" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Vector3.X' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Y" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Vector3.Y' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Z" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Vector3.Z' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Vector4" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#W" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Vector4.W' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#X" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Vector4.X' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Y" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Vector4.Y' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Z" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Vector4.Z' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Accord.Math.Distances">
       <Types>
        <Type Name="Euclidean" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Distance(System.Double,System.Double,System.Double,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Distances" File="Euclidean.cs" Line="93">The 'this' parameter (or 'Me' in Visual Basic) of 'Euclidean.Distance(double, double, double, double)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IDistance`1" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Warning">Define a custom attribute to replace 'IDistance&lt;T&gt;'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="IDistance`2" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">On type 'IDistance&lt;T, U&gt;', prefix generic type parameter name 'U' with 'T'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ISimilarity`1" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Warning">Define a custom attribute to replace 'ISimilarity&lt;T&gt;'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ISimilarity`2" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">On type 'ISimilarity&lt;T, U&gt;', prefix generic type parameter name 'U' with 'T'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Mahalanobis" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FromCovarianceMatrix(System.Double[,])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Distances" File="Mahalanobis.cs" Line="131">The 'this' parameter (or 'Me' in Visual Basic) of 'Mahalanobis.FromCovarianceMatrix(double[,])' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FromPrecisionMatrix(System.Double[,])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Distances" File="Mahalanobis.cs" Line="146">The 'this' parameter (or 'Me' in Visual Basic) of 'Mahalanobis.FromPrecisionMatrix(double[,])' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Minkowski" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Distances" File="Minkowski.cs" Line="70">Method 'Minkowski.Minkowski(double)' passes 'The Minkowski distance is not a metric for p &lt; 1.' as the 'paramName' argument to a 'ArgumentOutOfRangeException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Euclidean" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Minkowski.Euclidean' or change the field to one that is an immutable reference type. If the reference type 'Minkowski' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Manhattan" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Minkowski.Manhattan' or change the field to one that is an immutable reference type. If the reference type 'Minkowski' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SquareEuclidean" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Distance(System.Double,System.Double,System.Double,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Distances" File="SquareEuclidean.cs" Line="92">The 'this' parameter (or 'Me' in Visual Basic) of 'SquareEuclidean.Distance(double, double, double, double)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SquareMahalanobis" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FromCovarianceMatrix(System.Double[,])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Distances" File="SquaredMahalanobis.cs" Line="94">The 'this' parameter (or 'Me' in Visual Basic) of 'SquareMahalanobis.FromCovarianceMatrix(double[,])' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FromPrecisionMatrix(System.Double[,])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Distances" File="SquaredMahalanobis.cs" Line="109">The 'this' parameter (or 'Me' in Visual Basic) of 'SquareMahalanobis.FromPrecisionMatrix(double[,])' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Accord.Math.Geometry">
       <Types>
        <Type Name="GeometryTools" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetAngleBetweenVectors(Accord.Point,Accord.Point,Accord.Point)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="end" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\AForge\Geometry" File="GeometryTools.cs" Line="31">In member 'GeometryTools.GetAngleBetweenVectors(Point, Point, Point)', correct the casing of 'end' in parameter name 'vector1end' by changing it to 'End'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\AForge\Geometry" File="GeometryTools.cs" Line="31">In member 'GeometryTools.GetAngleBetweenVectors(Point, Point, Point)', correct the casing of 'end' in parameter name 'vector2end' by changing it to 'End'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Line" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Single,System.Single,System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="unused" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\AForge\Geometry" File="Line.cs" Line="182">Parameter 'unused' of 'Line.Line(float, float, bool)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PolygonSubType" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="SubType" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'SubType' in type name 'PolygonSubType' exists as a discrete term. If your usage is intended to be single word, case it as 'Subtype'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SimpleShapeChecker" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CheckPolygonSubType(System.Collections.Generic.List`1&lt;Accord.IntPoint&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SubType" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\AForge\Geometry" File="SimpleShapeChecker.cs" Line="387">The compound word 'SubType' in member name 'SimpleShapeChecker.CheckPolygonSubType(List&lt;IntPoint&gt;)' exists as a discrete term. If your usage is intended to be single word, case it as 'Subtype' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Accord.Math.Random">
       <Types>
        <Type Name="IRandomNumberGenerator" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Next()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Next" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Rename virtual/interface member 'IRandomNumberGenerator.Next()' so that it no longer conflicts with the reserved language keyword 'Next'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Accord.Math.Transforms">
       <Types>
        <Type Name="FourierTransform2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DFT(System.Numerics.Complex[],Accord.Math.FourierTransform+Direction)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DFT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Transforms" File="FourierTransform2.cs" Line="80">Correct the casing of 'DFT' in member name 'FourierTransform2.DFT(Complex[], FourierTransform.Direction)' by changing it to 'Dft'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DFT2(System.Numerics.Complex[][],Accord.Math.FourierTransform+Direction)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DFT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Transforms" File="FourierTransform2.cs" Line="129">Correct the casing of 'DFT' in member name 'FourierTransform2.DFT2(Complex[][], FourierTransform.Direction)' by changing it to 'Dft'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FFT(System.Double[],System.Double[],Accord.Math.FourierTransform+Direction)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FFT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Transforms" File="FourierTransform2.cs" Line="217">Correct the casing of 'FFT' in member name 'FourierTransform2.FFT(double[], double[], FourierTransform.Direction)' by changing it to 'Fft'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FFT(System.Numerics.Complex[],Accord.Math.FourierTransform+Direction)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FFT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Transforms" File="FourierTransform2.cs" Line="174">Correct the casing of 'FFT' in member name 'FourierTransform2.FFT(Complex[], FourierTransform.Direction)' by changing it to 'Fft'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FFT2(System.Numerics.Complex[][],Accord.Math.FourierTransform+Direction)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FFT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-01-15 13:11:23Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Math\Transforms" File="FourierTransform2.cs" Line="245">Correct the casing of 'FFT' in member name 'FourierTransform2.FFT2(Complex[][], FourierTransform.Direction)' by changing it to 'Fft'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040">
   <Name>Avoid empty interfaces</Name>
   <Description>Interfaces are meant to contain members that specify a set of behaviors. To mark or label a class, use an attribute instead of an empty interface.</Description>
   <Resolution Name="Default">Define a custom attribute to replace {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182128.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506">
   <Name>Avoid excessive class coupling</Name>
   <Description>Types and methods with a high degree of class coupling can be difficult to maintain.</Description>
   <Resolution Name="Type">{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb397994.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="TypeShouldBeDiscreteTerm">The compound word '{0}' in type name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104">
   <Name>Do not declare read only mutable reference types</Name>
   <Description>A read-only declaration for a mutable reference type does not prevent the field's instance data from being modified. For example, a read-only StringBuilder field declaration does not make sense, since the data encapsulated by the StringBuilder can be modified using the read-only reference.</Description>
   <Resolution Name="Default">Remove the read-only designation from {0} or change the field to one that is an immutable reference type. If the reference type {1} is, in fact, immutable, exclude this message.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182302.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="25">Error</MessageLevel>
   <File Name="securityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008">
   <Name>Enums should have zero value</Name>
   <Description>An enum should generally have a zero value. If the enum is not decorated with the Flags attribute, it should have a member with a value of zero that represents the empty state. Optionally, this value is named 'None'. For a Flags-attributed enum, a zero-valued member is optional and, if it exists, should always be named 'None'. This value should indicate that no values have been set in the enum. Using a zero-valued member for other purposes is contrary to the use of the Flags attribute in that the bitwise AND and OR operators are useless with the member.</Description>
   <Resolution Name="NotFlagsNoZeroValue">Add a member to {0} that has a value of zero with a suggested name of 'None'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182149.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715">
   <Name>Identifiers should have correct prefix</Name>
   <Description>Prefix interface names with the letter 'I' to indicate that the type is an interface, as in IFormattable. Prefix generic type parameter names with the letter 'T' and provide them with descriptive names, as in Dictionary&lt;TKey, TValue&gt;, unless a single 'T' is completely self-explanatory, as in Collection&lt;T&gt;. Use Pascal casing for both interface and type parameter names. Use abbreviations sparingly. Do not use the underscore character. Do use similar names when defining a class/interface pair where the class is a standard implementation of the interface. The names should differ only by the letter I prefixed on the interface name, as with Component and IComponent.</Description>
   <Resolution Name="MethodTypeParameter">On method {0}, prefix generic type parameter name {1} with 'T'.</Resolution>
   <Resolution Name="TypeTypeParameter">On type {0}, prefix generic type parameter name {1} with 'T'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182243.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716">
   <Name>Identifiers should not match keywords</Name>
   <Description>Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</Description>
   <Resolution Name="Member">Rename virtual/interface member {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182248.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
   <Name>Instantiate argument exceptions correctly</Name>
   <Description>String arguments passed to constructors of ArgumentException and its derived types should be correct. Types derived from ArgumentException have inconsistent constructor overloads with respect to the message and paramName parameters as compared to ArgumentException.</Description>
   <Resolution Name="IncorrectMessage">Method {0} passes parameter name '{1}' as the {2} argument to a {3} constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Resolution>
   <Resolution Name="IncorrectParameterName">Method {0} passes '{1}' as the {2} argument to a {3} constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Resolution>
   <Resolution Name="NoArguments">Call the {0} constructor that contains a message and/or paramName parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182347.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
   <Name>Property names should not match get methods</Name>
   <Description>A Get method was found with the same name as a property. Get methods and properties should have names that clearly distinguish their function. See the design guidelines for information regarding choosing properties over methods.</Description>
   <Resolution Name="SameType">The property name {0} is confusing given the existence of method {1}. Rename or remove one of these members.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182253.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="ReplaceRepetitiveArgumentsWithParamsArray" Category="Microsoft.Design" CheckId="CA1025">
   <Name>Replace repetitive arguments with params array</Name>
   <Description>Several instances of same-type arguments can be better implemented as a parameter array argument. Generally, if a member declares three or more arguments of the same type, consider using a parameter array.</Description>
   <Resolution Name="Default">Consider implementing a version of {0} that accepts a parameter array argument.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182167.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
