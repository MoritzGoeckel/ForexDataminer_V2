<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 12.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="12.0">
 <Targets>
  <Target Name="E:\Programmieren\Libs\accord-framework\Release\net45\Accord.Controls.Imaging.dll">
   <Modules>
    <Module Name="accord.controls.imaging.dll">
     <Namespaces>
      <Namespace Name="Accord.Controls">
       <Types>
        <Type Name="ColorSlider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Controls.Imaging\AForge" File="ColorSlider.cs" Line="195">The property name 'ColorSlider.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HistogramEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="UseGenericEventHandlerInstances" Category="Microsoft.Design" CheckId="CA1003" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Remove 'HistogramEventHandler' and replace its usage with EventHandler&lt;T&gt;</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="HuePicker" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Controls.Imaging\AForge" File="HuePicker.cs" Line="150">The property name 'HuePicker.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ManipulatorControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="borderPen" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Controls.Imaging\AForge" File="ManipulatorControl.Designer.cs" Line="12">'ManipulatorControl' contains field 'ManipulatorControl.borderPen' that is of IDisposable type: 'Pen'. Change the Dispose method on 'ManipulatorControl' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="bottomLeftBackgroundBrush" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Controls.Imaging\AForge" File="ManipulatorControl.Designer.cs" Line="12">'ManipulatorControl' contains field 'ManipulatorControl.bottomLeftBackgroundBrush' that is of IDisposable type: 'SolidBrush'. Change the Dispose method on 'ManipulatorControl' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="bottomRightBackgroundBrush" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Controls.Imaging\AForge" File="ManipulatorControl.Designer.cs" Line="12">'ManipulatorControl' contains field 'ManipulatorControl.bottomRightBackgroundBrush' that is of IDisposable type: 'SolidBrush'. Change the Dispose method on 'ManipulatorControl' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="disabledBrash" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Controls.Imaging\AForge" File="ManipulatorControl.Designer.cs" Line="12">'ManipulatorControl' contains field 'ManipulatorControl.disabledBrash' that is of IDisposable type: 'SolidBrush'. Change the Dispose method on 'ManipulatorControl' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="manipulatorBrush" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Controls.Imaging\AForge" File="ManipulatorControl.Designer.cs" Line="12">'ManipulatorControl' contains field 'ManipulatorControl.manipulatorBrush' that is of IDisposable type: 'SolidBrush'. Change the Dispose method on 'ManipulatorControl' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="topLeftBackgroundBrush" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Controls.Imaging\AForge" File="ManipulatorControl.Designer.cs" Line="12">'ManipulatorControl' contains field 'ManipulatorControl.topLeftBackgroundBrush' that is of IDisposable type: 'SolidBrush'. Change the Dispose method on 'ManipulatorControl' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="topRightBackgroundBrush" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Controls.Imaging\AForge" File="ManipulatorControl.Designer.cs" Line="12">'ManipulatorControl' contains field 'ManipulatorControl.topRightBackgroundBrush' that is of IDisposable type: 'SolidBrush'. Change the Dispose method on 'ManipulatorControl' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Controls.Imaging\AForge" File="ManipulatorControl.Designer.cs" Line="33">Modify the call to 'Timer.Interval.set(int)' in method 'ManipulatorControl.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PositionChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'ManipulatorControl.PositionChangedHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'ManipulatorControl.PositionChangedHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ManipulatorControl+PositionChangedHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'ManipulatorControl.PositionChangedHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
          <Message TypeName="UseGenericEventHandlerInstances" Category="Microsoft.Design" CheckId="CA1003" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Remove 'ManipulatorControl.PositionChangedHandler' and replace its usage with EventHandler&lt;T&gt;</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ManipulatorControl+PositionEventArgs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'ManipulatorControl.PositionEventArgs'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SliderControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="borderPen" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Controls.Imaging\AForge" File="SliderControl.Designer.cs" Line="16">'SliderControl' contains field 'SliderControl.borderPen' that is of IDisposable type: 'Pen'. Change the Dispose method on 'SliderControl' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="disabledBrash" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Controls.Imaging\AForge" File="SliderControl.Designer.cs" Line="16">'SliderControl' contains field 'SliderControl.disabledBrash' that is of IDisposable type: 'SolidBrush'. Change the Dispose method on 'SliderControl' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="manipulatorBrush" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Controls.Imaging\AForge" File="SliderControl.Designer.cs" Line="16">'SliderControl' contains field 'SliderControl.manipulatorBrush' that is of IDisposable type: 'SolidBrush'. Change the Dispose method on 'SliderControl' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="negativeAreaBrush" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Controls.Imaging\AForge" File="SliderControl.Designer.cs" Line="16">'SliderControl' contains field 'SliderControl.negativeAreaBrush' that is of IDisposable type: 'SolidBrush'. Change the Dispose method on 'SliderControl' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="positiveAreaBrush" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Controls.Imaging\AForge" File="SliderControl.Designer.cs" Line="16">'SliderControl' contains field 'SliderControl.positiveAreaBrush' that is of IDisposable type: 'SolidBrush'. Change the Dispose method on 'SliderControl' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Controls.Imaging\AForge" File="SliderControl.Designer.cs" Line="37">Modify the call to 'Timer.Interval.set(int)' in method 'SliderControl.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PositionChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'SliderControl.PositionChangedHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'SliderControl.PositionChangedHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SliderControl+PositionChangedHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'SliderControl.PositionChangedHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="VideoSourcePlayer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetCurrentVideoFrame()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="e:\Programmieren\Libs\accord-framework\Sources\Accord.Controls.Imaging\AForge" File="VideoSourcePlayer.cs" Line="396">Change 'VideoSourcePlayer.GetCurrentVideoFrame()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NewFrame" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'VideoSourcePlayer.NewFrameHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'VideoSourcePlayer.NewFrameHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PlayingFinished" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'PlayingFinishedEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VideoSourcePlayer+NewFrameHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'VideoSourcePlayer.NewFrameHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Invoke(System.Object,System.Drawing.Bitmap&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2016-01-15 13:12:19Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning">Consider a design that does not require that 'image' be a reference parameter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare event handlers correctly</Name>
   <Description>By convention, .NET events have two parameters that specify the event sender and event data. Event handler signatures should follow this form: void MyEventHandler(object sender, EventArgs e). The 'sender' parameter is always of type System.Object, even if it is possible to employ a more specific type. The 'e' parameter is always of type System.EventArgs. Events that do not provide event data should use the System.EventHandler delegate type. Event handlers return void so that they can send each event to multiple target methods. Any value returned by a target would be lost after the first call.</Description>
   <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213">
   <Name>Disposable fields should be disposed</Name>
   <Description>If a type that implements IDisposable owns fields that also implement IDisposable, the encapsulating type's Dispose() implementation should call Dispose() on each disposable field.</Description>
   <Resolution Name="Default">{0} contains field {1} that is of IDisposable type: {2}. Change the Dispose method on {0} to call Dispose or Close on this field.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182328.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
   <Name>Do not pass types by reference</Name>
   <Description>Although there are legitimate times to use reference parameters, such use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be a reference parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182146.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601">
   <Name>Do not use timers that prevent power state changes</Name>
   <Description>Do not poll more often than or utilize timers that fire more frequently than once per second. Higher frequency periodic activity will keep the CPU busy and interfere with power-saving idle timers that turn off the display and hard disks.</Description>
   <Resolution Name="Default">Modify the call to {0} in method {1} to set the timer interval to a value that's greater than or equal to one second.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182230.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="mobilityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
   <Name>Identifiers should have correct suffix</Name>
   <Description>Types that extend certain base types have specified name suffixes. Types that extend Attribute, for example, should be suffixed in 'Attribute', as in ObsoleteAttribute. This rules checks types that extend several base types, including Attribute, Exception, EventArgs, IMembershipPermission, Stream, and others.</Description>
   <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182244.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>Nested types should not be visible</Name>
   <Description>Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</Description>
   <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
   <Name>Property names should not match get methods</Name>
   <Description>A Get method was found with the same name as a property. Get methods and properties should have names that clearly distinguish their function. See the design guidelines for information regarding choosing properties over methods.</Description>
   <Resolution Name="BaseType">The property name {0} is confusing given the existence of inherited method {1}. Rename or remove this property.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182253.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UseGenericEventHandlerInstances" Category="Microsoft.Design" CheckId="CA1003">
   <Name>Use generic event handler instances</Name>
   <Description>Do not declare new delegates to be used as event handlers when targeting a version of the .NET Framework that supports generics. Use an instance EventHandler&lt;T&gt; instead.</Description>
   <Resolution Name="Default">Remove {0} and replace its usage with EventHandler&lt;T&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182178.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
