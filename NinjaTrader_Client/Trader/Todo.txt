//Implementing

	IMachineLearning: (implement svm)
	Refactor inRamDatamining, its too big
	(Hm... architecture change?) Handle Data like SSI in Streamingdb

	Indicators: MACD RSI NN-Timeseries+(Outcome)
	Derived Indicators: 
		MA-Crossover, 
		STOCH-Crossover/Border, 
		Volume on price -> Always tends to go to the most vol (uphill)
	Implement Indicator idea: Regression time to price -> Prediction
	Implement Indicator idea: Regression price to outcome -> Prediction
	Implement Indicator idear: NN for graphical structure of graph to outcome

Get predictive power for given indicator (Outcome / OutcomeCode) (Code first)
	--> Work over the Infohandling for Indicators
		-->Save indicatorinfo / Pairinfo about distribution etc in database / other table
		-->Read that
		-->Posibility to recompute
		-->save the cheap info
	--> Possible to do a regression to test predictiveness?

Trying out indicators with GetPredictivePower (Random / Genetic)
	Write to File, Delete from db again

Predictive power for some outcomes at the same time
	
//Datamining

--> #1 Find indicators with statistical correlations to the outcome
#2 Combine them with machinelearning
#3 Create a strategy
#4 Create a executen strategy

//Testing

#5 Backtest
#6 Papertrade
#7 Livetrade

//Create some unittests, cover the parts that are hard to test
